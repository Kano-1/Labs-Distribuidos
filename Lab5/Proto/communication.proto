syntax = "proto3";
package Proto;
option go_package = "Lab5/Proto";

// Broker - Ingenieros/Comandante
service Broker {
    rpc GetServerAddress(AddressRequest) returns (ServerAddress);
}

service Servers {
    // Servidor - Ingeniero
    rpc WriteInfo(ActionRequest) returns (ClockResponse);
    // Servidor - Comandante
    rpc ReadInfo(ReadRequest) returns (EnemiesResponse);
    // Servidor - Servidor
    rpc PropagateChanges(PropagationRequest) returns (PropagationResponse);
}

message AddressRequest {
    int32 id = 1;
    bool engineer = 2;
}

message ServerAddress {
    int32 address = 1;
}

message ActionRequest {
    int32 id = 1;
    string action = 2;
    string sector = 3;
    string base = 4;
    string value = 5;
}

message ClockResponse {
    repeated int32 clock = 1;
}

message ReadRequest {
    string sector = 1;
    string base = 2;
}

message EnemiesResponse {
    int32 enemies = 1;
    repeated int32 clock = 2;
}

message VectorClocks {
    string sector = 1;
    repeated int32 clock = 2;
}

message PropagationRequest {
    int32 id = 1;
    repeated string log = 2;
    repeated VectorClocks clocks = 3;
}

message PropagationResponse {
    bool success = 1;
}