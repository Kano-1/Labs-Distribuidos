syntax = "proto3";
package Proto;
option go_package = "Lab4/Proto";


service Mercenary {
    rpc StartFloor(FloorInfo) returns (Empty);
    rpc ReportMove(Move) returns (Empty);
}

service Director {
    rpc AddMercenary(MercenaryInfo) returns (Empty);
    rpc ReportDeath(DeathInfo) returns (Empty);
    rpc ReportMove(MoveInfo) returns (Empty);
    rpc CheckStatus(Empty) returns (StatusResponse);
    rpc RequestAccumulatedAmount(Empty) returns (AccumulatedAmountResponse); // Added for DoshBank
}

service DoshBank {
    rpc GetAccumulatedAmount(Empty) returns (AccumulatedAmountResponse);
}

message FloorInfo {
    int32 floor = 1;
}

message Move {
    string action = 1;
    bool leads_to_death = 2;
}

message MercenaryInfo {
    string name = 1;
    string address = 2;
}

message DeathInfo {
    string name = 1;
}

message MoveInfo {
    string name = 1;
    Move move = 2;
}

message StatusResponse {
    repeated MercenaryStatus mercenaries = 1;
}

message MercenaryStatus {
    string name = 1;
    bool alive = 2;
    bool ready = 3;
    string address = 4;
}

message AccumulatedAmountResponse { // Added for DoshBank
    int32 amount = 1;
}

message Empty {}


// NameNode and DataNodes
service NameNode {
  rpc SendDecision(Decision) returns (Response);
  rpc GetDecisions(MercenaryRequest) returns (DecisionsResponse);
  rpc StoreDecision(Decision) returns (Response);
  rpc RetrieveDecisions(MercenaryFloorRequest) returns (DecisionsResponse);
}

message Decision {
  string mercenary = 1;
  int32 floor = 2;
  repeated string decisions = 3;
}

message MercenaryRequest {
  string mercenary = 1;
}

message MercenaryFloorRequest {
  string mercenary = 1;
  int32 floor = 2;
}

message Response {
  string message = 1;
}

message DecisionsResponse {
  repeated string decisions = 1;
}